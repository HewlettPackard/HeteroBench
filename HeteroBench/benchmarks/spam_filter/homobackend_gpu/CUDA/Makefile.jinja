CXX := {{ compiler }}
NVCC := {{ cuda_compiler }}
CXXFLAGS := {{ cxxflags }}
LDFLAGS := {{ ldflags }}

# input path
INPUT_PATH := {{ input }}

# iterations
ITERATIONS := {{ iteration_times }}

# num of features
NUM_FEATURES := {{ num_features }}

# num of samples
NUM_SAMPLES := {{ num_samples }}

# num of training
NUM_TRAINING := {{ num_training }}

# num of testing
NUM_TESTING := {{ num_testing }}

# step size
STEP_SIZE := {{ step_size }}

# num of epochs
NUM_EPOCHS := {{ num_epochs }}

# Project name
TARGET_EXEC := {{ target }}_sw

# Source files
SOURCES := {{ sources }}

# MACRO DEFINITION
MACRO := -DITERATIONS=$(ITERATIONS) -DNUM_FEATURES=$(NUM_FEATURES) -DNUM_SAMPLES=$(NUM_SAMPLES) -DNUM_TRAINING=$(NUM_TRAINING) -DNUM_TESTING=$(NUM_TESTING) -DSTEP_SIZE=$(STEP_SIZE) -DNUM_EPOCHS=$(NUM_EPOCHS)

# GPU Source files
GPU_SOURCES := {{ gpu_sources }}

# Object files
OBJECTS := $(SOURCES:.cpp=.o)

GPU_OBJECTS := $(GPU_SOURCES:.cu=.o)

# Include directories
INCLUDE_DIRS := cuda_impl/include $(IMAGELIB_DIR)
INCLUDE_PARAMS := $(addprefix -I, $(INCLUDE_DIRS))

# Default target
all: $(TARGET_EXEC)

$(TARGET_EXEC): $(OBJECTS) $(GPU_OBJECTS)
	$(CXX)  $(LDFLAGS) -o $@ $^

main.o: main.cpp
	$(CXX) $(CXXFLAGS) $(MACRO) $(INCLUDE_PARAMS) -c $< -o $@

cuda_impl/Sigmoid.o: cuda_impl/Sigmoid.cpp
	$(CXX) $(CXXFLAGS) $(MACRO) $(INCLUDE_PARAMS) -c $< -o $@

# To compile GPU source file
cuda_impl/%.o: cuda_impl/%.cu
	$(NVCC) -lineinfo  $(MACRO) $(INCLUDE_PARAMS) -c $< -o $@

# Run
run:
	{{ profiling_tool }}./$(TARGET_EXEC) -p $(INPUT_PATH)

# Clean up
clean:
	rm -f $(TARGET_EXEC) $(OBJECTS) $(GPU_OBJECTS)

.PHONY: all clean run help

help:
	@echo "Usage: make [all|clean|run|help]"
	@echo "  all:        Build the project"
	@echo "  clean:      Clean up the project"
	@echo "  run:        Run the project"
	@echo "  help:       Show this help message"
