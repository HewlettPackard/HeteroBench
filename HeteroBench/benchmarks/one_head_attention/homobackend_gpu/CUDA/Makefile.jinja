CXX := {{ compiler }}
NVCC := {{ cuda_compiler }}
CXXFLAGS := {{ cxxflags }}
LDFLAGS := {{ ldflags }}

# input path
INPUT_PATH := {{ input }}

# output path
OUTPUT_PATH := {{ output }}

# iteration_times
ITERATIONS := {{ iteration_times }}
# batch_size
BATCH_SIZE := {{ batch_size }}
# N
N := {{ N }}
# d
D := {{ d }}

# Project name
TARGET_EXEC := {{ target }}_sw

# Source files
SOURCES := {{ sources }}

# MACRO DEFINITION
MACRO := -DITERATIONS=$(ITERATIONS) \
	-DBATCH_SIZE=$(BATCH_SIZE) \
	-DN=$(N) \
	-DD=$(D)

# GPU Source files
GPU_SOURCES := {{ gpu_sources }}

# Object files
OBJECTS := $(SOURCES:.cpp=.o)

GPU_OBJECTS := $(GPU_SOURCES:.cu=.o)

INCLUDE_DIRS := cuda_impl/include
INCLUDE_PARAMS := $(addprefix -I, $(INCLUDE_DIRS))

# Default target
all: $(TARGET_EXEC)

$(TARGET_EXEC): $(OBJECTS) $(GPU_OBJECTS)
	$(CXX) $(LDFLAGS) -o $@ $^

main.o: main.cpp
	$(CXX) $(CXXFLAGS) $(MACRO) $(INCLUDE_PARAMS) -c $< -o $@

# To compile other GPU source files
cuda_impl/%.o: cuda_impl/%.cu
	$(NVCC) -lineinfo  $(MACRO) $(INCLUDE_PARAMS) -c $< -o $@

# Run
run:
	{{ profiling_tool }}./$(TARGET_EXEC) $(INPUT_PATH) $(OUTPUT_PATH)

# Clean up
clean:
	rm -f $(TARGET_EXEC) $(OBJECTS) $(GPU_OBJECTS)

.PHONY: all clean run help

help:
	@echo "Usage: make [all|clean|run|help]"
	@echo "  all:        Build the project"
	@echo "  clean:      Clean up the project"
	@echo "  run:        Run the project"
	@echo "  help:       Show this help message"
