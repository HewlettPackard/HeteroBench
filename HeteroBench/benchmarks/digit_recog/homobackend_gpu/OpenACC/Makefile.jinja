CXX := {{ compiler }}
CXXFLAGS := {{ cxxflags }}
LDFLAGS := {{ ldflags }}

# num of test
NUM_TEST := {{ iteration_times }}

NUM_TRAINING := {{ num_training }}
CLASS_SIZE := {{ class_size }}
DIGIT_WIDTH := {{ digit_width }}
K_CONST := {{ k_const }}
PARA_FACTOR := {{ para_factor }}

# Project name
TARGET_EXEC := {{ target }}_sw

# Source files
SOURCES := {{ sources }}

# MACRO DEFINITION
MACRO := -DNUM_TEST=$(NUM_TEST) -DNUM_TRAINING=$(NUM_TRAINING) -DCLASS_SIZE=$(CLASS_SIZE) -DDIGIT_WIDTH=$(DIGIT_WIDTH) -DK_CONST=$(K_CONST) -DPARA_FACTOR=$(PARA_FACTOR)

# GPU Source files
GPU_SOURCES := {{ gpu_sources }}

# Object files
OBJECTS := $(SOURCES:.cpp=.o)

GPU_OBJECTS := $(GPU_SOURCES:.cpp=.o)

# Include directories
INCLUDE_DIRS := acc_impl/include
INCLUDE_PARAMS := $(addprefix -I, $(INCLUDE_DIRS))

# Default target
all: $(TARGET_EXEC)

$(TARGET_EXEC): $(OBJECTS) $(GPU_OBJECTS)
	$(CXX) $(LDFLAGS) -o $@ $^

main.o: main.cpp
	$(CXX) $(CXXFLAGS) $(MACRO) $(INCLUDE_PARAMS) -c $< -o $@

# To compile GPU source file
acc_impl/%.o: acc_impl/%.cpp
	$(CXX) $(CXXFLAGS) $(MACRO) $(INCLUDE_PARAMS)  -c $< -o $@

# Run
run:
	{{ profiling_tool }} ./$(TARGET_EXEC)

# Clean up
clean:
	rm -f $(TARGET_EXEC) $(OBJECTS) $(GPU_OBJECTS)

.PHONY: all clean run help

help:
	@echo "Usage: make [all|clean|run|help]"
	@echo "  all:        Build the project"
	@echo "  clean:      Clean up the project"
	@echo "  run:        Run the project"
	@echo "  help:       Show this help message"
